---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app immich-server
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    controllers:
      main:
        strategy: RollingUpdate
        annotations:
          configmap.reloader.stakater.com/reload: immich-configmap
        pod:
          enableServiceLinks: false
          securityContext:
            runAsUser: 568
            runAsGroup: 568
            fsGroup: 568
            fsGroupChangePolicy: OnRootMismatch
          topologySpreadConstraints:
            - maxSkew: 1
              topologyKey: kubernetes.io/hostname
              whenUnsatisfiable: DoNotSchedule
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: *app

        initContainers:
          init-db:
            image:
              repository: ghcr.io/onedr0p/postgres-init
              tag: 16
            envFrom: &envFrom
              - secretRef:
                  name: immich-secret
              - configMapRef:
                  name: immich-configmap
        containers:
          main:
            image:
              repository: ghcr.io/immich-app/immich-server
              tag: v1.98.1
            args:
              - ./start-server.sh
            envFrom: *envFrom
            resources:
              requests:
                cpu: 250m
                memory: 256Mi
              limits:
                memory: 1Gi
    service:
      main:
        ports:
          http:
            port: 3001
    ingress:
      main:
        enabled: true
        className: external
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          nginx.ingress.kubernetes.io/proxy-body-size: 4G
        hosts:
          - host: &host immich.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - *host
            secretName: immich-cert
    persistence:
      config:
        enabled: true
        type: secret
        name: immich-config-secret
        globalMounts:
          - path: /config
      library:
        enabled: true
        existingClaim: immich-nfs
        globalMounts:
          - path: /usr/src/app/upload
