---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.12.10
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    ingress:
      dashboard:
        ingressClassName: internal
        annotations:
          hajimari.io/appName: Rook
          hajimari.io/icon: mdi:chess-rook
          cert-manager.io/cluster-issuer: letsencrypt-production
        host:
          name: &host rook.${SECRET_DOMAIN}
          path: /
        tls:
          - secretName: rook-tls
            hosts:
              - *host
    toolbox:
      enabled: true
    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true
    cephClusterSpec:
      crashCollector:
        disable: false
      dashboard:
        enabled: true
        urlPrefix: /
        ssl: false
      storage:
        useAllNodes: true
        useAllDevices: true
        config:
          osdsPerDevice: "1"
    cephBlockPools:
      - name: ceph-ssd
        spec:
          failureDomain: host
          replicated:
            size: 3
          deviceClass: ssd
        storageClass:
          enabled: true
          name: ${CLUSTER_STORAGE_BLOCK_SSD}
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: xfs
      - name: ceph-hdd
        spec:
          failureDomain: host
          replicated:
            size: 3
          deviceClass: hdd
        storageClass:
          enabled: true
          name: ${CLUSTER_STORAGE_BLOCK_HDD}
          isDefault: false
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: '2'
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: xfs
      - name: ceph-ssd-ext4
        spec:
          failureDomain: host
          replicated:
            size: 3
          deviceClass: ssd
        storageClass:
          enabled: true
          name: ${CLUSTER_STORAGE_BLOCK_SSD_EXT4}
          isDefault: false
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
      - name: ceph-hdd-ext4
        spec:
          failureDomain: host
          replicated:
            size: 3
          deviceClass: hdd
        storageClass:
          enabled: true
          name: ${CLUSTER_STORAGE_BLOCK_HDD_EXT4}
          isDefault: false
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: '2'
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4
    cephFileSystems:
      - name: cephfs-ssd
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: cephfs-ssd
              deviceClass: ssd
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              requests:
                cpu: 150m
                memory: 4096M
              limits:
                memory: 8192M
        storageClass:
          enabled: true
          isDefault: false
          name: ${CLUSTER_STORAGE_FILESYSTEM_SSD}
          pool: cephfs-ssd
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: xfs
      - name: cephfs-hdd
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
              name: cephfs-hdd
              deviceClass: hdd
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              requests:
                cpu: 150m
                memory: 4096M
              limits:
                memory: 8192M
        storageClass:
          enabled: true
          isDefault: false
          name: ${CLUSTER_STORAGE_FILESYSTEM_HDD}
          pool: cephfs-hdd
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: xfs
    cephObjectStores:
      - name: ceph-objectstore
        spec:
          metadataPool:
            failureDomain: host
            replicated:
              size: 3
          dataPool:
            failureDomain: host
            erasureCoded:
              dataChunks: 2
              codingChunks: 1
            deviceClass: ssd
          preservePoolsOnDelete: true
          gateway:
            port: 80
            resources:
              requests:
                cpu: 100m
                memory: 1024M
              limits:
                memory: 4096M
            instances: 2
          healthCheck:
            bucket:
              interval: 60s
        storageClass:
          enabled: true
          name: ${CLUSTER_STORAGE_BUCKET}
          reclaimPolicy: Delete
          parameters:
            region: ceph-objectstore
